package by.tovpenets;


/*
    Основное задание
    1. Написать программу со следующим функционалом:
    На вход передать строку (будем считать, что это номер документа).
    Номер документа имеет формат xxxx-yyy-xxxx-yyy-xyxy, где x — это число,
    а y — это буква.
    - Вывести на экран в одну строку два первых блока по 4 цифры.
    - Вывести на экран номер документа, но блоки из трех букв заменить
    на *** (каждая буква заменятся на *).
    - Вывести на экран только одни буквы из номера документа в формате
    yyy/yyy/y/y в нижнем регистре.
    - Вывести на экран буквы из номера документа в формате
    "Letters:yyy/yyy/y/y" в верхнем регистре(реализовать с помощью
    класса StringBuilder).
    - Проверить содержит ли номер документа последовательность abc и
    вывети сообщение содержит или нет(причем, abc и ABC считается
    одинаковой последовательностью).
    - Проверить начинается ли номер документа с последовательности
    555.
    - Проверить заканчивается ли номер документа на
    последовательность 1a2b.
    Все эти методы реализовать в отдельном классе в статических методах,
    которые на вход (входным параметром) будут принимать вводимую на вход
    программы строку.
    Дополнительное задание
    2. Дана строка произвольной длины с произвольными словами.
    Найти самое короткое слово в строке и вывести его на экран.
    Найти самое длинное слово в строке и вывести его на экран.
    Если таких слов несколько, то вывести последнее из них.
    3. Дана строка произвольной длины с произвольными словами.
    Найти слово, в котором число различных символов минимально.
    Слово может содержать буквы и цифры.
    Если таких слов несколько, найти первое из них.
    Например, в строке "fffff ab f 1234 jkjk" найденное слово должно быть "fffff".

    4. Дана строка произвольной длины с произвольными словами.
    Написать программу для проверки является ли любое выбранное слово в
    строке палиндромом.

    TeachMeSkills.by

    Например, есть строка, вводится число 3, значит необходимо проверить
    является ли 3-е слово в этой строке палиндромом.
    Предусмотреть предупреждающие сообщения на случаи ошибочных
    ситуаций: например, в строке 5 слов, а на вход программе передали число
    500 и т. п. ситуации.

    5. Дана произвольная строка.
    Вывести на консоль новую строку, которой задублирована каждая буква из
    начальной строки.
    Например, "Hello" -> "HHeelllloo".
*/

/*
        Основное задание
    1. Доработать нулевое домашнее задание предыдущего урока.
    Теперь надо создать свои классы исключений на каждую ситуацию:
    - Проверить содержит ли номер документа последовательность abc.
    - Проверить начинается ли номер документа с последовательности 555.
    - Проверить заканчивается ли номер документа на последовательность 1a2b.
    Если номер документа не удовлетворяет условию - то "бросить" исключение.
    В методе класса, в котором будут вызываться эти методы для
    демонстрации работы, перехватить исключение конструкцией try-catch и
    в блоке catch вывести сообщение для пользователя (сообщение на консоль).
    Дополнительное задание
    2. Создать класс, в котором будет статический метод.
    (почитать и понять, чем статический метод отличается от нестатического
    - обсудить на занятии по необходимости)
    Этот метод принимает на вход три параметра:
    Login,
    Password,
    confirmPassword.
    Все поля имеют тип данных String.

    Длина login должна быть меньше 20 символов и не должен содержать пробелы.
    Если login не соответствует этим требованиям, необходимо выбросить WrongLoginException.

    Длина password должна быть меньше 20 символов, не должен содержать
    пробелом и должен содержать хотя бы одну цифру.
    Также password и confirmPassword должны быть равны.
    Если password не соответствует этим требованиям, необходимо
    выбросить WrongPasswordException.


    WrongPasswordException и WrongLoginException - пользовательские
    классы исключения с двумя конструкторами – один по умолчанию, второй
    принимает сообщение исключения и передает его в конструктор класса
    Exception.
    Метод возвращает true, если значения верны или false в другом случае.
*/


public class Main {

    public static void main(String[] args) {

        String login = "spider1994", password = "it1301", confirmPassword = "it1301";

        System.out.println(Authentication.getAuthentication(login, password, confirmPassword));
    }
}

class Authentication {

    /*
        Длина password должна быть меньше 20 символов, не должен содержать
        пробелом и должен содержать хотя бы одну цифру.
        Также password и confirmPassword должны быть равны.
        Если password не соответствует этим требованиям, необходимо
        выбросить WrongPasswordException.
    */

    static boolean getAuthentication(String login, String password, String confirmPassword) {
        try {
            if (login.length() >= 20 || login.contains(" "))
                throw new WrongLoginException("Login is incorrect!");

            if (password.length() >= 20 || password.contains(" ") || !password.matches("^.*\\d.*$"))
                throw new WrongPasswordException("Password is incorrect!");

        } catch (WrongLoginException | WrongPasswordException e) {
            return false;
        }
        return true;
    }

}

class WrongLoginException extends RuntimeException {

    WrongLoginException() {}

    WrongLoginException(String message) {
        super(message);
    }
}

class WrongPasswordException extends RuntimeException {

    WrongPasswordException() {}

    WrongPasswordException(String message) {
        super(message);
    }
}